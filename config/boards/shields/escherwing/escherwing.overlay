/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,kscan = &kscan_central;
        zmk,matrix_transform = &default_transform;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;  // 6 cols per side
        rows = <6>;
        
        // Split keyboard layout - 35 keys per side (70 total)
        // Left side (normal orientation) | Right side (flipped)
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)    RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)    RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)    RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)    RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11)
            RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4) RC(4,5)    RC(4,6) RC(4,7) RC(4,8) RC(4,9) RC(4,10) RC(4,11)
                    RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4)            RC(5,6) RC(5,7) RC(5,8) RC(5,9) RC(5,10)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        
        diode-direction = "col2row";
        
        row-gpios
            = <&pro_micro 5  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // P0.17 - Row0
            , <&pro_micro 6  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // P0.20 - Row1  
            , <&pro_micro 7  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // P0.22 - Row2
            , <&pro_micro 8  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // P0.24 - Row3
            , <&pro_micro 9  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // P1.00 - Row4
            , <&pro_micro 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // P0.11 - Row5
            ;
            
        col-gpios
            = <&pro_micro 21 GPIO_ACTIVE_HIGH>  // P0.02 - Col0
            , <&pro_micro 20 GPIO_ACTIVE_HIGH>  // P0.29 - Col1
            , <&pro_micro 19 GPIO_ACTIVE_HIGH>  // P0.31 - Col2
            , <&pro_micro 18 GPIO_ACTIVE_HIGH>  // P1.15 - Col3
            , <&pro_micro 15 GPIO_ACTIVE_HIGH>  // P1.13 - Col4
            , <&pro_micro 14 GPIO_ACTIVE_HIGH>  // P1.11 - Col5
            ;
    };

    // Split keyboard communication via TRRS
    // Central (left) side will be the primary
    kscan_central: kscan_central {
        compatible = "zmk,kscan-composite";
        label = "KSCAN_CENTRAL";
        rows = <6>;
        columns = <12>;
        
        left: left_kscan {
            kscan = <&kscan0>;
        };
        
        right: right_kscan {
            kscan = <&kscan_peripheral>;
            column-offset = <6>;
        };
    };

    kscan_peripheral: kscan_peripheral {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN_PERIPHERAL";
        
        diode-direction = "col2row";
        
        // Right side pins (accounting for flipped orientation)
        row-gpios
            = <&pro_micro 5  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // P0.17 - Row0
            , <&pro_micro 6  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // P0.20 - Row1  
            , <&pro_micro 7  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // P0.22 - Row2
            , <&pro_micro 8  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // P0.24 - Row3
            , <&pro_micro 9  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // P1.00 - Row4
            , <&pro_micro 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // P0.11 - Row5
            ;
            
        // Columns are flipped for the right side
        col-gpios
            = <&pro_micro 14 GPIO_ACTIVE_HIGH>  // P1.11 - Col5 (flipped to Col0)
            , <&pro_micro 15 GPIO_ACTIVE_HIGH>  // P1.13 - Col4 (flipped to Col1)
            , <&pro_micro 18 GPIO_ACTIVE_HIGH>  // P1.15 - Col3 (flipped to Col2)
            , <&pro_micro 19 GPIO_ACTIVE_HIGH>  // P0.31 - Col2 (flipped to Col3)
            , <&pro_micro 20 GPIO_ACTIVE_HIGH>  // P0.29 - Col1 (flipped to Col4)
            , <&pro_micro 21 GPIO_ACTIVE_HIGH>  // P0.02 - Col0 (flipped to Col5)
            ;
    };

    // Rotary encoder
    encoder: encoder {
        compatible = "alps,ec11";
        label = "ENCODER";
        a-gpios = <&pro_micro 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>; // P1.04 - RotA
        b-gpios = <&pro_micro 12 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>; // P1.06 - RotB
        resolution = <4>;
        status = "okay";
    };

    // LEDs
    led_strip: ws2812 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";
        
        /* SPI */
        spi-max-frequency = <4000000>;
        
        /* WS2812 */
        chain-length = <2>; // Adjust based on number of LEDs
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        
        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
    
    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder>;
        triggers-per-rotation = <20>;
    };
};